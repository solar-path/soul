/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CompanyIndexImport } from './routes/company/index'
import { Route as publicIndexImport } from './routes/(public)/index'
import { Route as publicPricingImport } from './routes/(public)/pricing'
import { Route as CompanySettingsIndexImport } from './routes/company/settings/index'
import { Route as CompanyHrmIndexImport } from './routes/company/hrm/index'
import { Route as CompanyErmIndexImport } from './routes/company/erm/index'
import { Route as CompanyAddressBookIndexImport } from './routes/company/addressBook/index'
import { Route as AuthProfileIndexImport } from './routes/auth/profile/index'
import { Route as publicDocsIndexImport } from './routes/(public)/docs/index'
import { Route as CompanyUserManagementUserImport } from './routes/company/userManagement/user'
import { Route as publicDocsTermsImport } from './routes/(public)/docs/terms'
import { Route as publicDocsPrivacyImport } from './routes/(public)/docs/privacy'
import { Route as publicDocsIcImport } from './routes/(public)/docs/ic'
import { Route as publicDocsErmImport } from './routes/(public)/docs/erm'
import { Route as publicDocsBusinessImport } from './routes/(public)/docs/business'
import { Route as publicDocsAuthenticationImport } from './routes/(public)/docs/authentication'
import { Route as publicDocsAiImport } from './routes/(public)/docs/ai'
import { Route as CompanyHrmPositionIndexImport } from './routes/company/hrm/position/index'
import { Route as CompanyHrmEmployeeIndexImport } from './routes/company/hrm/employee/index'
import { Route as CompanyHrmDepartmentIndexImport } from './routes/company/hrm/department/index'

// Create/Update Routes

const CompanyIndexRoute = CompanyIndexImport.update({
  id: '/company/',
  path: '/company/',
  getParentRoute: () => rootRoute,
} as any)

const publicIndexRoute = publicIndexImport.update({
  id: '/(public)/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const publicPricingRoute = publicPricingImport.update({
  id: '/(public)/pricing',
  path: '/pricing',
  getParentRoute: () => rootRoute,
} as any)

const CompanySettingsIndexRoute = CompanySettingsIndexImport.update({
  id: '/company/settings/',
  path: '/company/settings/',
  getParentRoute: () => rootRoute,
} as any)

const CompanyHrmIndexRoute = CompanyHrmIndexImport.update({
  id: '/company/hrm/',
  path: '/company/hrm/',
  getParentRoute: () => rootRoute,
} as any)

const CompanyErmIndexRoute = CompanyErmIndexImport.update({
  id: '/company/erm/',
  path: '/company/erm/',
  getParentRoute: () => rootRoute,
} as any)

const CompanyAddressBookIndexRoute = CompanyAddressBookIndexImport.update({
  id: '/company/addressBook/',
  path: '/company/addressBook/',
  getParentRoute: () => rootRoute,
} as any)

const AuthProfileIndexRoute = AuthProfileIndexImport.update({
  id: '/auth/profile/',
  path: '/auth/profile/',
  getParentRoute: () => rootRoute,
} as any)

const publicDocsIndexRoute = publicDocsIndexImport.update({
  id: '/(public)/docs/',
  path: '/docs/',
  getParentRoute: () => rootRoute,
} as any)

const CompanyUserManagementUserRoute = CompanyUserManagementUserImport.update({
  id: '/company/userManagement/user',
  path: '/company/userManagement/user',
  getParentRoute: () => rootRoute,
} as any)

const publicDocsTermsRoute = publicDocsTermsImport.update({
  id: '/(public)/docs/terms',
  path: '/docs/terms',
  getParentRoute: () => rootRoute,
} as any)

const publicDocsPrivacyRoute = publicDocsPrivacyImport.update({
  id: '/(public)/docs/privacy',
  path: '/docs/privacy',
  getParentRoute: () => rootRoute,
} as any)

const publicDocsIcRoute = publicDocsIcImport.update({
  id: '/(public)/docs/ic',
  path: '/docs/ic',
  getParentRoute: () => rootRoute,
} as any)

const publicDocsErmRoute = publicDocsErmImport.update({
  id: '/(public)/docs/erm',
  path: '/docs/erm',
  getParentRoute: () => rootRoute,
} as any)

const publicDocsBusinessRoute = publicDocsBusinessImport.update({
  id: '/(public)/docs/business',
  path: '/docs/business',
  getParentRoute: () => rootRoute,
} as any)

const publicDocsAuthenticationRoute = publicDocsAuthenticationImport.update({
  id: '/(public)/docs/authentication',
  path: '/docs/authentication',
  getParentRoute: () => rootRoute,
} as any)

const publicDocsAiRoute = publicDocsAiImport.update({
  id: '/(public)/docs/ai',
  path: '/docs/ai',
  getParentRoute: () => rootRoute,
} as any)

const CompanyHrmPositionIndexRoute = CompanyHrmPositionIndexImport.update({
  id: '/company/hrm/position/',
  path: '/company/hrm/position/',
  getParentRoute: () => rootRoute,
} as any)

const CompanyHrmEmployeeIndexRoute = CompanyHrmEmployeeIndexImport.update({
  id: '/company/hrm/employee/',
  path: '/company/hrm/employee/',
  getParentRoute: () => rootRoute,
} as any)

const CompanyHrmDepartmentIndexRoute = CompanyHrmDepartmentIndexImport.update({
  id: '/company/hrm/department/',
  path: '/company/hrm/department/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(public)/pricing': {
      id: '/(public)/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof publicPricingImport
      parentRoute: typeof rootRoute
    }
    '/(public)/': {
      id: '/(public)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/': {
      id: '/company/'
      path: '/company'
      fullPath: '/company'
      preLoaderRoute: typeof CompanyIndexImport
      parentRoute: typeof rootRoute
    }
    '/(public)/docs/ai': {
      id: '/(public)/docs/ai'
      path: '/docs/ai'
      fullPath: '/docs/ai'
      preLoaderRoute: typeof publicDocsAiImport
      parentRoute: typeof rootRoute
    }
    '/(public)/docs/authentication': {
      id: '/(public)/docs/authentication'
      path: '/docs/authentication'
      fullPath: '/docs/authentication'
      preLoaderRoute: typeof publicDocsAuthenticationImport
      parentRoute: typeof rootRoute
    }
    '/(public)/docs/business': {
      id: '/(public)/docs/business'
      path: '/docs/business'
      fullPath: '/docs/business'
      preLoaderRoute: typeof publicDocsBusinessImport
      parentRoute: typeof rootRoute
    }
    '/(public)/docs/erm': {
      id: '/(public)/docs/erm'
      path: '/docs/erm'
      fullPath: '/docs/erm'
      preLoaderRoute: typeof publicDocsErmImport
      parentRoute: typeof rootRoute
    }
    '/(public)/docs/ic': {
      id: '/(public)/docs/ic'
      path: '/docs/ic'
      fullPath: '/docs/ic'
      preLoaderRoute: typeof publicDocsIcImport
      parentRoute: typeof rootRoute
    }
    '/(public)/docs/privacy': {
      id: '/(public)/docs/privacy'
      path: '/docs/privacy'
      fullPath: '/docs/privacy'
      preLoaderRoute: typeof publicDocsPrivacyImport
      parentRoute: typeof rootRoute
    }
    '/(public)/docs/terms': {
      id: '/(public)/docs/terms'
      path: '/docs/terms'
      fullPath: '/docs/terms'
      preLoaderRoute: typeof publicDocsTermsImport
      parentRoute: typeof rootRoute
    }
    '/company/userManagement/user': {
      id: '/company/userManagement/user'
      path: '/company/userManagement/user'
      fullPath: '/company/userManagement/user'
      preLoaderRoute: typeof CompanyUserManagementUserImport
      parentRoute: typeof rootRoute
    }
    '/(public)/docs/': {
      id: '/(public)/docs/'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof publicDocsIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/profile/': {
      id: '/auth/profile/'
      path: '/auth/profile'
      fullPath: '/auth/profile'
      preLoaderRoute: typeof AuthProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/addressBook/': {
      id: '/company/addressBook/'
      path: '/company/addressBook'
      fullPath: '/company/addressBook'
      preLoaderRoute: typeof CompanyAddressBookIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/erm/': {
      id: '/company/erm/'
      path: '/company/erm'
      fullPath: '/company/erm'
      preLoaderRoute: typeof CompanyErmIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/hrm/': {
      id: '/company/hrm/'
      path: '/company/hrm'
      fullPath: '/company/hrm'
      preLoaderRoute: typeof CompanyHrmIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/settings/': {
      id: '/company/settings/'
      path: '/company/settings'
      fullPath: '/company/settings'
      preLoaderRoute: typeof CompanySettingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/hrm/department/': {
      id: '/company/hrm/department/'
      path: '/company/hrm/department'
      fullPath: '/company/hrm/department'
      preLoaderRoute: typeof CompanyHrmDepartmentIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/hrm/employee/': {
      id: '/company/hrm/employee/'
      path: '/company/hrm/employee'
      fullPath: '/company/hrm/employee'
      preLoaderRoute: typeof CompanyHrmEmployeeIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/hrm/position/': {
      id: '/company/hrm/position/'
      path: '/company/hrm/position'
      fullPath: '/company/hrm/position'
      preLoaderRoute: typeof CompanyHrmPositionIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/pricing': typeof publicPricingRoute
  '/': typeof publicIndexRoute
  '/company': typeof CompanyIndexRoute
  '/docs/ai': typeof publicDocsAiRoute
  '/docs/authentication': typeof publicDocsAuthenticationRoute
  '/docs/business': typeof publicDocsBusinessRoute
  '/docs/erm': typeof publicDocsErmRoute
  '/docs/ic': typeof publicDocsIcRoute
  '/docs/privacy': typeof publicDocsPrivacyRoute
  '/docs/terms': typeof publicDocsTermsRoute
  '/company/userManagement/user': typeof CompanyUserManagementUserRoute
  '/docs': typeof publicDocsIndexRoute
  '/auth/profile': typeof AuthProfileIndexRoute
  '/company/addressBook': typeof CompanyAddressBookIndexRoute
  '/company/erm': typeof CompanyErmIndexRoute
  '/company/hrm': typeof CompanyHrmIndexRoute
  '/company/settings': typeof CompanySettingsIndexRoute
  '/company/hrm/department': typeof CompanyHrmDepartmentIndexRoute
  '/company/hrm/employee': typeof CompanyHrmEmployeeIndexRoute
  '/company/hrm/position': typeof CompanyHrmPositionIndexRoute
}

export interface FileRoutesByTo {
  '/pricing': typeof publicPricingRoute
  '/': typeof publicIndexRoute
  '/company': typeof CompanyIndexRoute
  '/docs/ai': typeof publicDocsAiRoute
  '/docs/authentication': typeof publicDocsAuthenticationRoute
  '/docs/business': typeof publicDocsBusinessRoute
  '/docs/erm': typeof publicDocsErmRoute
  '/docs/ic': typeof publicDocsIcRoute
  '/docs/privacy': typeof publicDocsPrivacyRoute
  '/docs/terms': typeof publicDocsTermsRoute
  '/company/userManagement/user': typeof CompanyUserManagementUserRoute
  '/docs': typeof publicDocsIndexRoute
  '/auth/profile': typeof AuthProfileIndexRoute
  '/company/addressBook': typeof CompanyAddressBookIndexRoute
  '/company/erm': typeof CompanyErmIndexRoute
  '/company/hrm': typeof CompanyHrmIndexRoute
  '/company/settings': typeof CompanySettingsIndexRoute
  '/company/hrm/department': typeof CompanyHrmDepartmentIndexRoute
  '/company/hrm/employee': typeof CompanyHrmEmployeeIndexRoute
  '/company/hrm/position': typeof CompanyHrmPositionIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(public)/pricing': typeof publicPricingRoute
  '/(public)/': typeof publicIndexRoute
  '/company/': typeof CompanyIndexRoute
  '/(public)/docs/ai': typeof publicDocsAiRoute
  '/(public)/docs/authentication': typeof publicDocsAuthenticationRoute
  '/(public)/docs/business': typeof publicDocsBusinessRoute
  '/(public)/docs/erm': typeof publicDocsErmRoute
  '/(public)/docs/ic': typeof publicDocsIcRoute
  '/(public)/docs/privacy': typeof publicDocsPrivacyRoute
  '/(public)/docs/terms': typeof publicDocsTermsRoute
  '/company/userManagement/user': typeof CompanyUserManagementUserRoute
  '/(public)/docs/': typeof publicDocsIndexRoute
  '/auth/profile/': typeof AuthProfileIndexRoute
  '/company/addressBook/': typeof CompanyAddressBookIndexRoute
  '/company/erm/': typeof CompanyErmIndexRoute
  '/company/hrm/': typeof CompanyHrmIndexRoute
  '/company/settings/': typeof CompanySettingsIndexRoute
  '/company/hrm/department/': typeof CompanyHrmDepartmentIndexRoute
  '/company/hrm/employee/': typeof CompanyHrmEmployeeIndexRoute
  '/company/hrm/position/': typeof CompanyHrmPositionIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/pricing'
    | '/'
    | '/company'
    | '/docs/ai'
    | '/docs/authentication'
    | '/docs/business'
    | '/docs/erm'
    | '/docs/ic'
    | '/docs/privacy'
    | '/docs/terms'
    | '/company/userManagement/user'
    | '/docs'
    | '/auth/profile'
    | '/company/addressBook'
    | '/company/erm'
    | '/company/hrm'
    | '/company/settings'
    | '/company/hrm/department'
    | '/company/hrm/employee'
    | '/company/hrm/position'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/pricing'
    | '/'
    | '/company'
    | '/docs/ai'
    | '/docs/authentication'
    | '/docs/business'
    | '/docs/erm'
    | '/docs/ic'
    | '/docs/privacy'
    | '/docs/terms'
    | '/company/userManagement/user'
    | '/docs'
    | '/auth/profile'
    | '/company/addressBook'
    | '/company/erm'
    | '/company/hrm'
    | '/company/settings'
    | '/company/hrm/department'
    | '/company/hrm/employee'
    | '/company/hrm/position'
  id:
    | '__root__'
    | '/(public)/pricing'
    | '/(public)/'
    | '/company/'
    | '/(public)/docs/ai'
    | '/(public)/docs/authentication'
    | '/(public)/docs/business'
    | '/(public)/docs/erm'
    | '/(public)/docs/ic'
    | '/(public)/docs/privacy'
    | '/(public)/docs/terms'
    | '/company/userManagement/user'
    | '/(public)/docs/'
    | '/auth/profile/'
    | '/company/addressBook/'
    | '/company/erm/'
    | '/company/hrm/'
    | '/company/settings/'
    | '/company/hrm/department/'
    | '/company/hrm/employee/'
    | '/company/hrm/position/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  publicPricingRoute: typeof publicPricingRoute
  publicIndexRoute: typeof publicIndexRoute
  CompanyIndexRoute: typeof CompanyIndexRoute
  publicDocsAiRoute: typeof publicDocsAiRoute
  publicDocsAuthenticationRoute: typeof publicDocsAuthenticationRoute
  publicDocsBusinessRoute: typeof publicDocsBusinessRoute
  publicDocsErmRoute: typeof publicDocsErmRoute
  publicDocsIcRoute: typeof publicDocsIcRoute
  publicDocsPrivacyRoute: typeof publicDocsPrivacyRoute
  publicDocsTermsRoute: typeof publicDocsTermsRoute
  CompanyUserManagementUserRoute: typeof CompanyUserManagementUserRoute
  publicDocsIndexRoute: typeof publicDocsIndexRoute
  AuthProfileIndexRoute: typeof AuthProfileIndexRoute
  CompanyAddressBookIndexRoute: typeof CompanyAddressBookIndexRoute
  CompanyErmIndexRoute: typeof CompanyErmIndexRoute
  CompanyHrmIndexRoute: typeof CompanyHrmIndexRoute
  CompanySettingsIndexRoute: typeof CompanySettingsIndexRoute
  CompanyHrmDepartmentIndexRoute: typeof CompanyHrmDepartmentIndexRoute
  CompanyHrmEmployeeIndexRoute: typeof CompanyHrmEmployeeIndexRoute
  CompanyHrmPositionIndexRoute: typeof CompanyHrmPositionIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  publicPricingRoute: publicPricingRoute,
  publicIndexRoute: publicIndexRoute,
  CompanyIndexRoute: CompanyIndexRoute,
  publicDocsAiRoute: publicDocsAiRoute,
  publicDocsAuthenticationRoute: publicDocsAuthenticationRoute,
  publicDocsBusinessRoute: publicDocsBusinessRoute,
  publicDocsErmRoute: publicDocsErmRoute,
  publicDocsIcRoute: publicDocsIcRoute,
  publicDocsPrivacyRoute: publicDocsPrivacyRoute,
  publicDocsTermsRoute: publicDocsTermsRoute,
  CompanyUserManagementUserRoute: CompanyUserManagementUserRoute,
  publicDocsIndexRoute: publicDocsIndexRoute,
  AuthProfileIndexRoute: AuthProfileIndexRoute,
  CompanyAddressBookIndexRoute: CompanyAddressBookIndexRoute,
  CompanyErmIndexRoute: CompanyErmIndexRoute,
  CompanyHrmIndexRoute: CompanyHrmIndexRoute,
  CompanySettingsIndexRoute: CompanySettingsIndexRoute,
  CompanyHrmDepartmentIndexRoute: CompanyHrmDepartmentIndexRoute,
  CompanyHrmEmployeeIndexRoute: CompanyHrmEmployeeIndexRoute,
  CompanyHrmPositionIndexRoute: CompanyHrmPositionIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(public)/pricing",
        "/(public)/",
        "/company/",
        "/(public)/docs/ai",
        "/(public)/docs/authentication",
        "/(public)/docs/business",
        "/(public)/docs/erm",
        "/(public)/docs/ic",
        "/(public)/docs/privacy",
        "/(public)/docs/terms",
        "/company/userManagement/user",
        "/(public)/docs/",
        "/auth/profile/",
        "/company/addressBook/",
        "/company/erm/",
        "/company/hrm/",
        "/company/settings/",
        "/company/hrm/department/",
        "/company/hrm/employee/",
        "/company/hrm/position/"
      ]
    },
    "/(public)/pricing": {
      "filePath": "(public)/pricing.tsx"
    },
    "/(public)/": {
      "filePath": "(public)/index.tsx"
    },
    "/company/": {
      "filePath": "company/index.tsx"
    },
    "/(public)/docs/ai": {
      "filePath": "(public)/docs/ai.tsx"
    },
    "/(public)/docs/authentication": {
      "filePath": "(public)/docs/authentication.tsx"
    },
    "/(public)/docs/business": {
      "filePath": "(public)/docs/business.tsx"
    },
    "/(public)/docs/erm": {
      "filePath": "(public)/docs/erm.tsx"
    },
    "/(public)/docs/ic": {
      "filePath": "(public)/docs/ic.tsx"
    },
    "/(public)/docs/privacy": {
      "filePath": "(public)/docs/privacy.tsx"
    },
    "/(public)/docs/terms": {
      "filePath": "(public)/docs/terms.tsx"
    },
    "/company/userManagement/user": {
      "filePath": "company/userManagement/user.tsx"
    },
    "/(public)/docs/": {
      "filePath": "(public)/docs/index.tsx"
    },
    "/auth/profile/": {
      "filePath": "auth/profile/index.tsx"
    },
    "/company/addressBook/": {
      "filePath": "company/addressBook/index.tsx"
    },
    "/company/erm/": {
      "filePath": "company/erm/index.tsx"
    },
    "/company/hrm/": {
      "filePath": "company/hrm/index.tsx"
    },
    "/company/settings/": {
      "filePath": "company/settings/index.tsx"
    },
    "/company/hrm/department/": {
      "filePath": "company/hrm/department/index.tsx"
    },
    "/company/hrm/employee/": {
      "filePath": "company/hrm/employee/index.tsx"
    },
    "/company/hrm/position/": {
      "filePath": "company/hrm/position/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
